/*
* Copyright (c) 2002 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description: 
*     Resource file for the application (Logs.APP).
*
*/


//  RESOURCE IDENTIFIER

NAME    CLOG

//  INCLUDES
#include <bldvariant.hrh>

#include <avkon.loc>
#include <eikon.rh>
#include <eikon.rsg>
#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.mbg>    // For Query Note
#include <logs.mbg>     // Logs own icons
#include <appinfo.rh>   // Application inf structures

#include "Logs.hrh"     // Logs command IDs
#include <logs.loc>     // Logs localisation file
#include <stm.loc>      // Stm localisation file
#include <aocct.loc>    // AoC's & CT's localisation file

#include "LogsIcons.hrh"

//  CONSTANTS

//  MACROS

//  RESOURCE DEFINITIONS

/**
 *  Standard resource signature.
 */
RESOURCE RSS_SIGNATURE { }

/**
 *  Application caption and default filename
 */
RESOURCE TBUF
    {
    buf = "Loggs"; //qtn_apps_logs_grid;
    }

/**
 *  Logs application info.
 */
RESOURCE EIK_APP_INFO
    {
    custom_app_info_extension = r_logs_app_info_extension;
    }

/**
 *  Logs application info extension.
 */
RESOURCE EIK_APP_INFO_EXT r_logs_app_info_extension
    {
    }

/**
 *  Logs system menu pane.
 */
RESOURCE MENU_PANE r_logs_system_menu_bottom
    {
    items=
        {
        MENU_ITEM
            {
            command = ELogsCmdMenuSettings; 
            txt = qtn_logs_settings;
            },
        MENU_ITEM
            {
            command = EAknCmdHelp;
            txt = qtn_options_help;
            },
        MENU_ITEM
            {
            command = ELogsCmdMenuExit;
            txt = qtn_logs_cmd_exit;
            }
        };
    }

/**
 * Logs context pane text for views needing just text "Logs"
 */
RESOURCE TITLE_PANE r_logs_title_text
    {
    txt = qtn_logs_title_logs;
    //bmpfile = qtn_logs_subapp_icon_file;
    //bmpid = qgn_logs_menu_pane_icon;
    //bmpmask = qgn_logs_menu_pane_icon_mask;
    }


/**
 *  Counters view's Call Register item
 */
RESOURCE TBUF r_sub_app_call_register
    {
    buf = qtn_logs_ls1_call_register;
    }

/**
 *  Counters view's Call Timers item
 */
RESOURCE TBUF r_sub_app_call_timers
    {
    buf = qtn_logs_ls1_timers;
    }

/**
 *  Counters view's GPRS counter item
 */
RESOURCE TBUF r_sub_app_gprs_counter
    {
    buf = qtn_logs_ls1_gprs;
    }

/**
 * App list and Event list view's tab content.
 */
RESOURCE TAB_GROUP r_logs_navi_pane_tab_group
    {
    tab_width = EAknTabWidthWithTwoTabs;        // 36
    tabs =
        {
        TAB
            {
            id = EAppListTabId;
            bmpfile = qtn_logs_subapp_icon_file;
            bmpid = qgn_prop_log_counters_tab2;
            bmpmask = qgn_prop_log_counters_tab2_mask;
            },
        TAB
            {
            id = EEventListTabId;
            bmpfile = qtn_logs_subapp_icon_file;
            bmpid = qgn_prop_log_log_tab2;
            bmpmask = qgn_prop_log_log_tab2_mask;
            }
        };
    }

/**
 *  Common note that option is not allowed during active call
 */
RESOURCE DIALOG r_logs_note_during_call_option_not_allowed
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_EMPTY;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = 1;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = qtn_info_during_call;
                animation = R_QGN_NOTE_INFO_ANIM;
                };
            }
        };
    }

/**
 * SubApp list view's tab content.
 */
RESOURCE TAB_GROUP r_logs_sub_app_pane_tab_group
    {
    tab_width = EAknTabWidthWithThreeTabs;      // 22
    tabs =
        {
        TAB
            {
            id = ESubAppRecentsTabId;
            bmpfile = qtn_logs_subapp_icon_file;
            bmpid = qgn_prop_log_calls_tab3;
            bmpmask = qgn_prop_log_calls_tab3_mask;
            },
        TAB
            {
            id = ESubAppTimersTabId;
            bmpfile = qtn_logs_subapp_icon_file;
            bmpid = qgn_prop_log_timers_tab3;
            bmpmask = qgn_prop_log_timers_tab3_mask;
            },
        TAB
            {
            id = ESubAppGprsTabId;
            bmpfile = qtn_logs_subapp_icon_file;
            bmpid = qgn_prop_log_gprs_tab3;
            bmpmask = qgn_prop_log_gprs_tab3_mask;
            }
        };
    }


/**
 *  STM title
 */
RESOURCE TITLE_PANE r_stm_title_text
    {
    txt = qtn_stm_title_call_register;
    //bmpfile = qtn_logs_subapp_icon_file;
    //bmpid = qgn_logs_menu_pane_icon;
    //bmpmask = qgn_logs_menu_pane_icon_mask;
    }

/**
 * SubApp list view's listbox content (Missed)
 */
RESOURCE TBUF r_stm_app_missed_recent
    {
    buf = qtn_logs_stm_missed_calls;
    }

/**
 * SubApp list view's listbox content (Received)
 */
RESOURCE TBUF r_stm_app_received_recent
    {
    buf = qtn_logs_stm_received_calls;
    }

/**
 * SubApp list view's listbox content (Dialled)
 */
RESOURCE TBUF r_stm_app_dialled_recent
    {
    buf = qtn_logs_stm_dialled_calls;
    }

/**
 *  Localization string to "1 New call" text
 */
RESOURCE TBUF r_stm_text_one_new_call
    {
    buf = qtn_logs_stm_amount_call;
    }

/**
 *  Localization string to "n New calls" text
 */
RESOURCE TBUF r_stm_text_n_new_calls
    {
    buf = qtn_logs_stm_amount_mcalls;
    }

/**
 *  Clear all recent lists query's definition
 */
RESOURCE DIALOG r_clear_recent_lists_confirmation_query
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                label = qtn_stm_note_erase_all_f_lists;
                };
            }
        };
    }

/**
 * Filter popup view's listbox text line.
 */
RESOURCE TBUF r_logs_mf_all_communication_text
    {
    buf = qtn_logs_f_all_com;
    }

/**
 * Filter popup view's listbox text line.
 */
RESOURCE TBUF r_logs_mf_outgoing_text
    {
    buf = qtn_logs_f_all_out_com;
    }

/**
 * Filter popup view's listbox text line.
 */
RESOURCE TBUF r_logs_mf_incoming_text
    {
    buf = qtn_logs_f_all_in_com;
    }

/**
 * Filter popup view's listbox text line.
 */
RESOURCE TBUF r_logs_mf_voice_text
    {
    buf = qtn_logs_f_voice_calls;
    }


/**
 * Filter popup view's listbox text line.
 */
RESOURCE TBUF r_logs_mf_voicevideo_text
    {
    buf = qtn_logs_f_voicevideo_calls;
    }


/**
 * Filter popup view's listbox text line.
 */
RESOURCE TBUF r_logs_mf_sms_text
    {
    buf = qtn_logs_f_messages;
    }

/**
 * Filter popup view's listbox text line.
 */
RESOURCE TBUF r_logs_mf_packet_text
    {
    buf = qtn_logs_f_packet_conn;
    }

/**
 * Filter popup view's listbox text line.
 */
RESOURCE TBUF r_logs_mf_data_text
    {
    buf = qtn_logs_f_data_calls;
    }

/**
 * Filter popup view's listbox text line.
 */
RESOURCE TBUF r_logs_mf_wlan_text
    {
    buf = qtn_logs_f_data_wlan;
    }

/**
 * Filter popup view's listbox text line.
 */
RESOURCE TBUF r_logs_mf_selected_person_text
    {
    buf = qtn_logs_f_selected_event;
    }

/**
 * Filter popup view's listbox text line.
 */
RESOURCE TBUF r_logs_mf_show_text
    {
    buf = qtn_logs_filter_show;
    }

/**
 * Event list  "Private number" text
 */
RESOURCE TBUF r_logs_con_private_num
    {
    buf = qtn_logs_con_private_num;
    }

/**
 * Event list  "Unknown number" text
 */
RESOURCE TBUF r_logs_con_unknown_num
    {
    buf = qtn_logs_con_unknown;
    }

/**
 * Event list  "Payphone number" text
 */
RESOURCE TBUF r_logs_con_payphone_num
    {
    buf = qtn_logs_con_payphone;
    }

/**
 * Event list  "Operator Service" text
 */
RESOURCE TBUF r_logs_con_oper_serv
    {
    buf = qtn_logs_con_oper_serv;
    }

/**
 * Event list  "Group call" text
 */
RESOURCE TBUF r_logs_con_group_call
    {
    buf = qtn_pocuiintgr_logs_group_call;
    }

/**
 *  Emergency number call text, recent and log views
 */
RESOURCE TBUF r_logs_emerg_call
    {
    buf = qtn_logs_emerg_call;
    }

/**
 *  Clear Missed List query's definition
 */
RESOURCE DIALOG r_clear_missed_list_confirmation_query
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                label = qtn_stm_note_erase_missed;
                };
            }
        };
    }

/**
 *  Clear Received List query's definition
 */
RESOURCE DIALOG r_clear_received_list_confirmation_query
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                label = qtn_stm_note_erase_received;
                };
            }
        };
    }

/**
 *  Clear Dialled List query's definition
 */
RESOURCE DIALOG r_clear_dialled_list_confirmation_query
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                label = qtn_stm_note_erase_dialled;
                };
            }
        };
    }

/**
 *  Delete query's definition
 */
RESOURCE DIALOG r_delete_confirmation_query
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                label = text_stm_erase_entry_query;
                };
            }
        };
    }

RESOURCE TAB_GROUP r_stm_navi_pane_tab_group
    {
    tab_width = EAknTabWidthWithThreeTabs;      // 22
    tabs =
        {
        TAB
            {
            id = EMissedTabId;
            bmpfile = qtn_logs_subapp_icon_file;
            bmpid = qgn_prop_log_calls_missed_tab3;
            bmpmask = qgn_prop_log_calls_missed_tab3_mask;
            },
        TAB
            {
            id = EReceivedTabId;
            bmpfile = qtn_logs_subapp_icon_file;
            bmpid = qgn_prop_log_calls_in_tab3;
            bmpmask = qgn_prop_log_calls_in_tab3_mask;
            },
        TAB
            {
            id = EDialledTabId;
            bmpfile = qtn_logs_subapp_icon_file;
            bmpid = qgn_prop_log_calls_out_tab3;
            bmpmask = qgn_prop_log_calls_out_tab3_mask;
            }
        };
    }


RESOURCE TITLE_PANE r_stm_title_text_missed
    {
    txt = qtn_stm_title_missed_calls;
    //bmpfile = qtn_logs_subapp_icon_file;
    //bmpid = qgn_logs_menu_pane_icon;
    //bmpmask = qgn_logs_menu_pane_icon_mask;
    }


RESOURCE TITLE_PANE r_stm_title_text_received
    {
    txt = qtn_stm_title_received_calls;
    //bmpfile = qtn_logs_subapp_icon_file;
    //bmpid = qgn_logs_menu_pane_icon;
    //bmpmask = qgn_logs_menu_pane_icon_mask;
    }


RESOURCE TITLE_PANE r_stm_title_text_dialled
    {
    txt = qtn_stm_title_dialled_calls;
    // bmpfile = qtn_logs_subapp_icon_file;
    //bmpid = qgn_logs_menu_pane_icon;
    //bmpmask = qgn_logs_menu_pane_icon_mask;
    }

/*
 * Text: The primary logging off text
 * 
 */
RESOURCE TBUF r_qtn_logs_logging_off
    {
    buf = qtn_logs_logging_off;
    }

/**
 *  Text: The secondary logging off text
 */
RESOURCE TBUF r_qtn_logs_logging_off_secondary
    {
    buf = qtn_logs_logging_off_secondary;
    }


/**
 *  Empty dialled listbox text
 */
RESOURCE TBUF r_stm_dialled_empty_listbox_text
    {
    buf = text_no_dialled_events;
    }

/**
 *  Empty dialled listbox text when stm opened with send key
 */
RESOURCE TBUF r_stm_info_no_last_dialled
    {
    buf = qtn_stm_info_no_last_dialled;
    }


/**
 *  Empty missed listbox text
 */
RESOURCE TBUF r_stm_missed_empty_listbox_text
    {
    buf = text_no_missed_events;
    }

/**
 *  Empty received listbox text
 */
RESOURCE TBUF r_stm_received_empty_listbox_text
    {
    buf = text_no_received_events;
    }

/**
 *  Detail view's Direction text
 */
RESOURCE TBUF r_logs_detail_direction_text
    {
    buf = qtn_dlogs_lihd_direction;
    }

/**
 *  Detail view's Type text
 */
RESOURCE TBUF r_logs_detail_type_text
    {
    buf = qtn_dlogs_lihd_type;
    }

/**
 *  Detail view's Status text
 */
RESOURCE TBUF r_logs_detail_status_text
    {
    buf = qtn_dlogs_lihd_status;
    }

/**
 *  Detail view's Duration text
 */
RESOURCE TBUF r_logs_detail_duration_text
    {
    buf = qtn_dlogs_lihd_duration;
    }

/**
 *  Detail view's Tel. No text
 */
RESOURCE TBUF r_logs_detail_telno_text
    {
    buf = qtn_dlogs_lihd_tel_no;
    }

/**
 *  Detail view's Amount (Ex-Number) text
 */
RESOURCE TBUF r_logs_detail_number_text
    {
    buf = qtn_dlogs_lihd_number;
    }

/// Status localization texts.

/**
 *  Detail view's "Delivered" text
 */
RESOURCE TBUF r_logs_status_delivered_text
    {
    buf = qtn_dlogs_stat_delivered;
    }

/**
 *  Detail view's "Pending" text
 */
RESOURCE TBUF r_logs_status_pending_text
    {
    buf = qtn_dlogs_stat_pending;
    }

/**
 *  Detail view's "Failure" text
 */
RESOURCE TBUF r_logs_status_failure_text
    {
    buf = qtn_dlogs_stat_failure;
    }

/**
 *  Detail view's "Active" text
 */
RESOURCE TBUF r_logs_status_active_text
    {
    buf = qtn_dlogs_stat_active;
    }

/**
 *  Detail view's "kB" text
 */
RESOURCE TBUF r_logs_detail_view_kb_text
    {
    buf = qtn_dlogs_amount_bytes;
    }

/**
 *  Detail view's "Sent" text
 */
RESOURCE TBUF r_logs_status_sent_text
    {
    buf = qtn_dlogs_stat_sent;
    }

/**
 *  GPRS counter title
 */
RESOURCE TITLE_PANE r_gprs_counter_title_text
    {
    txt = qtn_log_title_gprs_count;
    }

/**
 *  Logs Settings title for Logs app
 */
RESOURCE TITLE_PANE r_logs_settings_title_for_logs
    {
    txt = qtn_logs_om_settings;
    }
    
/**
 *  Logs Settings title for GS app
 */
RESOURCE TITLE_PANE r_logs_settings_title_for_gs
    {
    txt = qtn_logs_title_logs;
    }

/**
 *  Log Length
 */
RESOURCE TBUF r_logs_settings_log_length_text
    {
    buf = qtn_logs_lda3_length;
    }


/************************************************
"Show Call Duration" moved General Settings application, not in use any more in Logs 
RESOURCE TBUF r_logs_settings_show_call_duration_text
    {
    buf = qtn_logs_lda3_time;
    }
************************************************/


/**
 *  Settings notify about to lack of aoc support
 */
RESOURCE DIALOG r_note_no_aoc_support
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_EMPTY;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = 1;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = qtn_aoc_note_no_support;
                animation = R_QGN_NOTE_INFO_ANIM;
                };
            }
        };
    }

/**
 *  Advice of Charges information note, that cost is shown instead on time
 */
RESOURCE DIALOG r_ct_note_timer_off
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_EMPTY;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = 1;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = qtn_aoc_note_timer_off;
                animation = R_QGN_NOTE_INFO_ANIM;
                };
            }
        };
    }

/**
 *  Call Timer's notify to inform that Call cost limit is activated
 */
RESOURCE DIALOG r_ct_note_limited_cost
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_EMPTY;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = 1;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                singular_label = qtn_aoc_note_limited_cost;
                animation = R_QGN_NOTE_INFO_ANIM;
                };
            }
        };
    }

/**
 *  AocCt's AoC title
 */
RESOURCE TITLE_PANE r_aocct_title_text_aoc
    {
    txt = qtn_aoc_title_costs;
    }

/**
 *  AocCt's CT title
 */
RESOURCE TITLE_PANE r_aocct_title_text_ct
    {
    txt = qtn_ctim_title_call_timers;
    }

/**
 *  Detail view's Sent text
 */
RESOURCE TBUF r_logs_detail_sent_text
    {
    buf = qtn_dlogs_lihd_sent;
    }

/**
 *  Detail view's Received text
 */
RESOURCE TBUF r_logs_detail_received_text
    {
    buf = qtn_dlogs_lihd_received;
    }

/**
 *  Resources for application info
 */
RESOURCE LOCALISABLE_APP_INFO r_logs_localisable_app_info
    {
    short_caption = qtn_apps_logs_grid;     //This is shown in appmenu grid view (Logs.loc)
    caption_and_icon =
    CAPTION_AND_ICON_INFO
        {
        caption = qtn_apps_logs_list;       //This is shown in appmenu list view (Logs.loc)
#ifdef __SCALABLE_ICONS
        number_of_icons = 1;
        icon_file = "Z:"APP_BITMAP_DIR"\\Logs_aif.mif";
#else
        number_of_icons = 2;
        icon_file = "Z:"APP_BITMAP_DIR"\\Logs_aif.mbm";
#endif
        };
    }

//
// Application LogsView resources
//

#include "Common.rss"

#include "LogsAppListView.rss"
#include "LogsSubAppListView.rss"
#include "LogsEventListView.rss"
#include "LogsDetailView.rss"
#include "StmView.rss"
#include "LogsSettingsView.rss"
#include "LogsGprsCounterView.rss"
#include "AocCtMenus.rss"
#include "AocCtView.rss"
#include "LogsIndicator.rss"



// End of File

