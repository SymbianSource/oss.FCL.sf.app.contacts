/*
* Copyright (c) 2005-2007 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Phonebook 2 MMC UI Extension resource information.
*
*/


// Phonebook 2
#include "Pbk2MmcUiUid.h"
#include "PmuCommands.hrh"
#include <Pbk2Commands.hrh>
#include <Pbk2Commands.rsg>
#include <Pbk2UIExtension.rh>
#include <Pbk2ViewId.hrh>
#include <phonebook2.loc>
#include <Pbk2MenuFilteringFlags.hrh>

// System includes
#include <avkon.loc>
#include <uikon.rh>
#include <eikon.rh>
#include <avkon.rh>
#include <avkon.rsg>
#include <avkon.mbg>
#include <AvkonIcons.hrh>
#include <CommonDialogs.hrh>
#include <CommonDialogs.rh>

// --------------------------------------------------------------------------
// Resource identifier
// --------------------------------------------------------------------------
//
NAME P2MU  // From Phonebook 2 MMC UI

// --------------------------------------------------------------------------
// Standard resource signature
// --------------------------------------------------------------------------
//
RESOURCE RSS_SIGNATURE { }

// --------------------------------------------------------------------------
// Extension information
// --------------------------------------------------------------------------
//
RESOURCE PHONEBOOK2_EXTENSION_INFORMATION
        r_phonebook2_mmc_ui_extension_information
    {
    version = 0;

    implementationUid = KPbk2MMCExtensionImplementationUID;
    
    loadingPolicy = KPbk2LoadInStartup;

    menuCommandRange = PHONEBOOK2_EXTENSION_RANGE
        {
        firstId = EMmcUiExtensionFirstCommand;
        lastId = EMmcUiExtensionLastCommand;
        };
    overwrittenCommands = {};
    extensionMenus =
        {
        PHONEBOOK2_EXTENSION_MENU_RESOURCE
            {
            viewId = EPbk2NamesListViewId;
            menuFilteringFlags = KPbk2MultiDriveAvailable;
            parentMenu = R_PHONEBOOK2_NAMESLIST_BACKUP_MENU_PLACEHOLDER;
            prevCommand = EPbk2CmdBackupPlaceholderFirst;
            menuPane = r_pmu_copy_contact_card_menu;
            },
  
        PHONEBOOK2_EXTENSION_MENU_RESOURCE
            {
            viewId = EPbk2NamesListViewId;
            menuFilteringFlags =
                  KPbk2MultiDriveAvailable;
            parentMenu = r_pmu_cascading_copy_contact_card_menu;
            prevCommand = EPmuCmdFirstBackupCascadeId;
            menuPane = r_pmu_import_copy_contact_card_menu;
            },
        PHONEBOOK2_EXTENSION_MENU_RESOURCE
            {
            viewId = EPbk2NamesListViewId;
            menuFilteringFlags = KPbk2MultiDriveAvailable | KPbk2ListContainsItems;
            parentMenu = r_pmu_cascading_copy_contact_card_menu;
            prevCommand = EPmuCmdFirstBackupCascadeId;
            menuPane = r_pmu_export_copy_contact_card_menu;
            }
           
        };
    viewIds = {};
    iconArrays = {};
    }

// --------------------------------------------------------------------------
// Copy contact card menu item for names list
// --------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_pmu_copy_contact_card_menu
    {
    items =
        {
        MENU_ITEM
            {
            command = EPmuCmdCascadingBackup;
            cascade = r_pmu_cascading_copy_contact_card_menu;
            txt = qtn_phob_opt_copy_card;
            }
        };
    }

// --------------------------------------------------------------------------
// Cascading copy contact card menu
// Contains a place holder item that is always dimmed.
// Place holder is added because otherwise it would be impossible to
// insert menu items to the first place.
// --------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_pmu_cascading_copy_contact_card_menu
    {
    items =
        {
        MENU_ITEM
            {
            command = EPmuCmdFirstBackupCascadeId;
            txt = "";
            flags = EEikMenuItemDimmed;
            }
        };
    }


// --------------------------------------------------------------------------
// Copy contact card submenu item for import
// --------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_pmu_import_copy_contact_card_menu
    {
    items =
        {
        MENU_ITEM
            {
            command = EPmuCmdImportFromMemoryCard;
            txt = qtn_phob_opt_copy_import;
            }
        };
    }

// --------------------------------------------------------------------------
// Copy contact card submenu item for export
// --------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_pmu_export_copy_contact_card_menu
    {
    items =
        {
        MENU_ITEM
            {
            command = EPmuCmdExportToMemoryCard;
            txt = qtn_phob_opt_copy_export;
            }
        };
    }

// --------------------------------------------------------------------------
// Confirm deletion of existing contacts
// --------------------------------------------------------------------------
//
RESOURCE DIALOG r_phonebook2_confirm_delete_existing_contacts
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO__YES;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationQueryLayout;
                };
            }
        };
    }

// --------------------------------------------------------------------------
// A general copy progress note
// --------------------------------------------------------------------------
//
RESOURCE DIALOG r_pmu_copy_progress_note
    {
    flags = EAknProgressNoteFlags;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralQuery;
            control = AVKON_NOTE
                {
                layout = EProgressLayout;
                singular_label = qtn_gen_note_copying;
                imagefile = AVKON_ICON_FILE;
                imageid = EMbmAvkonQgn_note_copy;
                imagemask = EMbmAvkonQgn_note_copy_mask;
                };
            }
        };
    }

// --------------------------------------------------------------------------
// Error note for low memory situation
// --------------------------------------------------------------------------
//
RESOURCE DIALOG r_memlo_error_note
    {
    flags = EAknErrorNoteFlags | EEikDialogFlagWait |
            EEikDialogFlagCloseDialogWhenTapped;
    buttons = R_AVKON_SOFTKEYS_OK_EMPTY;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                animation = R_QGN_NOTE_ERROR_ANIM;
                };
            }
        };
    }

// --------------------------------------------------------------------------
// Memory selection dialog
// --------------------------------------------------------------------------
//
RESOURCE MEMORYSELECTIONDIALOG r_phonebook2_memory_selection_dialog
    {
    softkey_1 = text_softkey_select;
    softkey_2 = text_softkey_cancel;
    }

// --------------------------------------------------------------------------
// Query text for confirming if the user wants to delete
// --------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_phob_query_remove_all_contacts
    {
    buf = qtn_phob_query_remove_all_contacts;
    }

// ---------------------------------------------------------------------------
// Not enough memory in phone
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_memlo_not_enough_memory
    {
    buf = qtn_memlo_not_enough_memory;
    }

// ---------------------------------------------------------------------------
// Not enough memory on MMC
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_memlo_mmc_not_enough_memory
    {
    buf = qtn_memlo_mmc_not_enough_memory;
    }

// -----------------------------------------------------------------------------
// Store not available
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_phob_store_not_available
    {
    buf = qtn_phob_store_not_available;
    }

// ---------------------------------------------------------------------------
// %U copied
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_pbcop_note_contact_copied_pb2
    {
    buf = qtn_pbcop_note_contact_copied_pb2;
    }

// ---------------------------------------------------------------------------
// %N contacts copied
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_pbcop_note_n_entry_copy_pb
    {
    buf = qtn_pbcop_note_n_entry_copy_pb;
    }

// ---------------------------------------------------------------------------
// 1 contact copied, 1 contact not copied
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_pbcop_info_one_ok_one_not
    {
    buf = qtn_pbcop_info_one_ok_one_not;
    }

// ---------------------------------------------------------------------------
// 1 contact copied, %N contacts not copied
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_pbcop_info_one_ok_n_not
    {
    buf = qtn_pbcop_info_one_ok_n_not;
    }

// ---------------------------------------------------------------------------
// %N contacts copied, 1 contact not copied
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_pbcop_info_n_ok_one_not
    {
    buf = qtn_pbcop_info_n_ok_one_not;
    }

// ---------------------------------------------------------------------------
// %0N contact copied, %1N contacts not copied
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_pbcop_info_n_ok_n_not
    {
    buf = qtn_pbcop_info_n_ok_n_not;
    }

// ---------------------------------------------------------------------------
// One entry not copied to Phonebook
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_pbcop_note_entry_not_copied
    {
    buf = qtn_pbcop_note_entry_not_copied;
    }

// ---------------------------------------------------------------------------
// Multiple entries copied to SIM memory
// ---------------------------------------------------------------------------
//
RESOURCE TBUF r_qtn_pbcop_note_contacts_copied
    {
    buf = qtn_pbcop_note_contacts_copied;
    }




// End of File
